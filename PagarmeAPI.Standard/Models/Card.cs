/*
 * PagarmeAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using APIMATIC.SDK.Common;


namespace PagarmeAPI.Standard.Models
{
    public class Card : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string id;
        private DateTime? dateCreated;
        private DateTime? dateUpdated;
        private string brand;
        private string holderName;
        private string firstDigits;
        private string lastDigits;
        private string country;
        private string fingerprint;
        private bool? valid;
        private string expirationDate;
        private Models.Customer customer;

        /// <summary>
        /// Identificador do cartão.
        /// </summary>
        [JsonProperty("id")]
        public string Id 
        { 
            get 
            {
                return this.id; 
            } 
            set 
            {
                this.id = value;
                onPropertyChanged("Id");
            }
        }

        /// <summary>
        /// Data de criação.
        /// </summary>
        [JsonConverter(typeof(IsoDateTimeConverter))]
        [JsonProperty("date_created")]
        public DateTime? DateCreated 
        { 
            get 
            {
                return this.dateCreated; 
            } 
            set 
            {
                this.dateCreated = value;
                onPropertyChanged("DateCreated");
            }
        }

        /// <summary>
        /// Data de atualização.
        /// </summary>
        [JsonConverter(typeof(IsoDateTimeConverter))]
        [JsonProperty("date_updated")]
        public DateTime? DateUpdated 
        { 
            get 
            {
                return this.dateUpdated; 
            } 
            set 
            {
                this.dateUpdated = value;
                onPropertyChanged("DateUpdated");
            }
        }

        /// <summary>
        /// Bandeira do cartão.
        /// </summary>
        [JsonProperty("brand")]
        public string Brand 
        { 
            get 
            {
                return this.brand; 
            } 
            set 
            {
                this.brand = value;
                onPropertyChanged("Brand");
            }
        }

        /// <summary>
        /// Nome do portador do cartão.
        /// </summary>
        [JsonProperty("holder_name")]
        public string HolderName 
        { 
            get 
            {
                return this.holderName; 
            } 
            set 
            {
                this.holderName = value;
                onPropertyChanged("HolderName");
            }
        }

        /// <summary>
        /// 6 primeiros dígitos do cartão.
        /// </summary>
        [JsonProperty("first_digits")]
        public string FirstDigits 
        { 
            get 
            {
                return this.firstDigits; 
            } 
            set 
            {
                this.firstDigits = value;
                onPropertyChanged("FirstDigits");
            }
        }

        /// <summary>
        /// 4 últimos dígitos do cartão.
        /// </summary>
        [JsonProperty("last_digits")]
        public string LastDigits 
        { 
            get 
            {
                return this.lastDigits; 
            } 
            set 
            {
                this.lastDigits = value;
                onPropertyChanged("LastDigits");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("country")]
        public string Country 
        { 
            get 
            {
                return this.country; 
            } 
            set 
            {
                this.country = value;
                onPropertyChanged("Country");
            }
        }

        /// <summary>
        /// Hash que permite comparar dois cartões através de seus fingerprints para saber se são o mesmo.
        /// </summary>
        [JsonProperty("fingerprint")]
        public string Fingerprint 
        { 
            get 
            {
                return this.fingerprint; 
            } 
            set 
            {
                this.fingerprint = value;
                onPropertyChanged("Fingerprint");
            }
        }

        /// <summary>
        /// Propriedade para verificar a validade do cartão, ou seja, caso 'true', é possível cobrar o cartão em condições normais, para 'false', não pode ser utilizado.
        /// </summary>
        [JsonProperty("valid")]
        public bool? Valid 
        { 
            get 
            {
                return this.valid; 
            } 
            set 
            {
                this.valid = value;
                onPropertyChanged("Valid");
            }
        }

        /// <summary>
        /// Data de expiração do cartão. Formato 'yyMM'.
        /// </summary>
        [JsonProperty("expiration_date")]
        public string ExpirationDate 
        { 
            get 
            {
                return this.expirationDate; 
            } 
            set 
            {
                this.expirationDate = value;
                onPropertyChanged("ExpirationDate");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("customer")]
        public Models.Customer Customer 
        { 
            get 
            {
                return this.customer; 
            } 
            set 
            {
                this.customer = value;
                onPropertyChanged("Customer");
            }
        }
    }
} 