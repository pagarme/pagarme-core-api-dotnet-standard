/*
 * PagarmeAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using APIMATIC.SDK.Common;


namespace PagarmeAPI.Standard.Models
{
    public class Customer : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string externalId;
        private string name;
        private Models.CustomerType type;
        private string country;
        private string email;
        private List<Models.Document> documents;
        private List<string> phoneNumbers;
        private DateTime? birthday;
        private int? id;

        /// <summary>
        /// Identificador do cliente na loja.
        /// </summary>
        [JsonProperty("external_id")]
        public string ExternalId 
        { 
            get 
            {
                return this.externalId; 
            } 
            set 
            {
                this.externalId = value;
                onPropertyChanged("ExternalId");
            }
        }

        /// <summary>
        /// Nome ou razão social do comprador
        /// </summary>
        [JsonProperty("name")]
        public string Name 
        { 
            get 
            {
                return this.name; 
            } 
            set 
            {
                this.name = value;
                onPropertyChanged("Name");
            }
        }

        /// <summary>
        /// Tipo da pessoa. Deve ser 'individual' para pessoa física ou 'corporation' para pessoa jurídica.
        /// </summary>
        [JsonProperty("type", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.CustomerType Type 
        { 
            get 
            {
                return this.type; 
            } 
            set 
            {
                this.type = value;
                onPropertyChanged("Type");
            }
        }

        /// <summary>
        /// País. Duas letras minúsculas, seguindo o padrão ISO 3166-1 alpha-2.
        /// </summary>
        [JsonProperty("country")]
        public string Country 
        { 
            get 
            {
                return this.country; 
            } 
            set 
            {
                this.country = value;
                onPropertyChanged("Country");
            }
        }

        /// <summary>
        /// Email do comprador.
        /// </summary>
        [JsonProperty("email")]
        public string Email 
        { 
            get 
            {
                return this.email; 
            } 
            set 
            {
                this.email = value;
                onPropertyChanged("Email");
            }
        }

        /// <summary>
        /// Documento. Contém campos 'type' para tipo de documento e 'number' para número do documento.
        /// </summary>
        [JsonProperty("documents")]
        public List<Models.Document> Documents 
        { 
            get 
            {
                return this.documents; 
            } 
            set 
            {
                this.documents = value;
                onPropertyChanged("Documents");
            }
        }

        /// <summary>
        /// Números de telefone. Requer ao menos um valor.
        /// </summary>
        [JsonProperty("phone_numbers")]
        public List<string> PhoneNumbers 
        { 
            get 
            {
                return this.phoneNumbers; 
            } 
            set 
            {
                this.phoneNumbers = value;
                onPropertyChanged("PhoneNumbers");
            }
        }

        /// <summary>
        /// Data de nascimento
        /// </summary>
        [JsonConverter(typeof(CustomDateTimeConverter), "yyyy'-'MM'-'dd")]
        [JsonProperty("birthday")]
        public DateTime? Birthday 
        { 
            get 
            {
                return this.birthday; 
            } 
            set 
            {
                this.birthday = value;
                onPropertyChanged("Birthday");
            }
        }

        /// <summary>
        /// Identificador do consumidor.
        /// </summary>
        [JsonProperty("id")]
        public int? Id 
        { 
            get 
            {
                return this.id; 
            } 
            set 
            {
                this.id = value;
                onPropertyChanged("Id");
            }
        }
    }
} 