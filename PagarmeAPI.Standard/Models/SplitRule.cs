/*
 * PagarmeAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using APIMATIC.SDK.Common;


namespace PagarmeAPI.Standard.Models
{
    public class SplitRule : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string recipientId;
        private bool liable;
        private bool chargeRemainder;
        private int? amount;
        private int? percentage;
        private bool chargeProcessingFee;
        private string id;

        /// <summary>
        /// Id de um recebedor
        /// </summary>
        [JsonProperty("recipient_id")]
        public string RecipientId 
        { 
            get 
            {
                return this.recipientId; 
            } 
            set 
            {
                this.recipientId = value;
                onPropertyChanged("RecipientId");
            }
        }

        /// <summary>
        /// Indica se o recebedor atrelado assumirá os riscos de chargeback da transação. Ao menos um dos recebedores deve ter esse parâmetro 'true'.
        /// </summary>
        [JsonProperty("liable")]
        public bool Liable 
        { 
            get 
            {
                return this.liable; 
            } 
            set 
            {
                this.liable = value;
                onPropertyChanged("Liable");
            }
        }

        /// <summary>
        /// No caso de restos de divisão de taxas entre os dois recebedores exista, aquele com esse parâmetro 'true' será cobrado desses centavos.
        /// </summary>
        [JsonProperty("charge_remainder")]
        public bool ChargeRemainder 
        { 
            get 
            {
                return this.chargeRemainder; 
            } 
            set 
            {
                this.chargeRemainder = value;
                onPropertyChanged("ChargeRemainder");
            }
        }

        /// <summary>
        /// Valor em centavos de quanto da transação irá para o recebedor.
        /// </summary>
        [JsonProperty("amount")]
        public int? Amount 
        { 
            get 
            {
                return this.amount; 
            } 
            set 
            {
                this.amount = value;
                onPropertyChanged("Amount");
            }
        }

        /// <summary>
        /// Valor em porcentagem de quanto da transação irá para o recebedor. Sempre inteiro, ou seja, não é possível especificar porcentagem quebrada.
        /// </summary>
        [JsonProperty("percentage")]
        public int? Percentage 
        { 
            get 
            {
                return this.percentage; 
            } 
            set 
            {
                this.percentage = value;
                onPropertyChanged("Percentage");
            }
        }

        /// <summary>
        /// Indica se o recebedor vinculado à regra será cobrado pelas taxas da transação. Ao menos um dos recebedores deve ter esse parâmetro 'true'.
        /// </summary>
        [JsonProperty("charge_processing_fee")]
        public bool ChargeProcessingFee 
        { 
            get 
            {
                return this.chargeProcessingFee; 
            } 
            set 
            {
                this.chargeProcessingFee = value;
                onPropertyChanged("ChargeProcessingFee");
            }
        }

        /// <summary>
        /// TODO: Write general description for this method
        /// </summary>
        [JsonProperty("id")]
        public string Id 
        { 
            get 
            {
                return this.id; 
            } 
            set 
            {
                this.id = value;
                onPropertyChanged("Id");
            }
        }
    }
} 